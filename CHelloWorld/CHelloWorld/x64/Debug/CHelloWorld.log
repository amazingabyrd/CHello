  ByrdAustinHW03.c
C:\GitHubRepo\CHello\ByrdAustinHW03.c(47,12): warning C4244: '=': conversion from 'double' to 'float', possible loss of data
C:\GitHubRepo\CHello\ByrdAustinHW03.c(59,12): warning C4244: '+=': conversion from 'float' to 'int', possible loss of data
C:\GitHubRepo\CHello\ByrdAustinHW03.c(60,13): warning C4244: 'function': conversion from 'float' to 'int', possible loss of data
C:\GitHubRepo\CHello\ByrdAustinHW03.c(70,11): warning C4244: '+=': conversion from 'float' to 'unsigned int', possible loss of data
C:\GitHubRepo\CHello\ByrdAustinHW03.c(79,15): warning C4244: 'function': conversion from 'unsigned int' to 'float', possible loss of data
C:\GitHubRepo\CHello\ByrdAustinHW03.c(110,10): warning C4244: 'return': conversion from 'const int' to 'float', possible loss of data
C:\GitHubRepo\CHello\ByrdAustinHW03.c(114,10): warning C4244: 'return': conversion from 'const int' to 'float', possible loss of data
CLANGTIDY : warning : argument unused during compilation: '/ZI' [clang-diagnostic-unused-command-line-argument]
C:\GitHubRepo\CHello\ByrdAustinHW03.c(42,3): warning G36456E0F: Value stored to 'scanVar' is never read [clang-analyzer-deadcode.DeadStores]
                  scanVar = scanf("%10f", &inputtemp);
                  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~
  C:\GitHubRepo\CHello\ByrdAustinHW03.c:42:3: note: Value stored to 'scanVar' is never read
                  scanVar = scanf("%10f", &inputtemp);
                  ^         ~~~~~~~~~~~~~~~~~~~~~~~~~
C:\GitHubRepo\CHello\ByrdAustinHW03.c(42,13): warning G2652FB77: Call to function 'scanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'scanf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]
                  scanVar = scanf("%10f", &inputtemp);
                            ^~~~~
  C:\GitHubRepo\CHello\ByrdAustinHW03.c:42:13: note: Call to function 'scanf' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'scanf_s' in case of C11
                  scanVar = scanf("%10f", &inputtemp);
                            ^~~~~
C:\GitHubRepo\CHello\ByrdAustinHW03.c(45,7): warning GAE4932A6: Although the value stored to 'scanVar' is used in the enclosing expression, the value is never actually read from 'scanVar' [clang-analyzer-deadcode.DeadStores]
                  if (scanVar = 1)
                      ^         ~
  C:\GitHubRepo\CHello\ByrdAustinHW03.c:45:7: note: Although the value stored to 'scanVar' is used in the enclosing expression, the value is never actually read from 'scanVar'
                  if (scanVar = 1)
                      ^         ~
C:\GitHubRepo\CHello\ByrdAustinHW03.c(45,15): warning G4C931CC9: using the result of an assignment as a condition without parentheses [clang-diagnostic-parentheses]
                  if (scanVar = 1)
                      ~~~~~~~~^~~
  C:\GitHubRepo\CHello\ByrdAustinHW03.c:45:15: note: place parentheses around the assignment to silence this warning
                  if (scanVar = 1)
                              ^
                      (          )
  C:\GitHubRepo\CHello\ByrdAustinHW03.c:45:15: note: use '==' to turn this assignment into an equality comparison
                  if (scanVar = 1)
                              ^
                              ==
  CHelloWorld.vcxproj -> C:\GitHubRepo\CHello\CHelloWorld\x64\Debug\CHelloWorld.exe
